<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<!--
  SW_KBirthday ant build file

  @version      $Id$
  SW_KBirthday Module
  @package SW_KBirthday
  @copyright	Copyright (C) 2009 - 2011 Schultschik Websolution. All rights reserved.
  @license		GNU General Public License <http://www.gnu.org/copyleft/gpl.html>
  @link			http://www.schultschik.de
  
  The following parameters can be defined inside the Eclipse build task as Arguments. They
  allow the build file to be platform independent as not path information resides within
  any of the build files.

  Parameters: (with default values - adjust the directories in Eclispe to your individual setup)
  	-Dproject_dir=..				(= workspace/mod_sw_kbirthday)
  	-Dpackage_dir=../../packages	(= workspace/packages)
  	-Dtmp_dir=tmp					(= workspace/mod_kunenasw_kbirthday/build/tmp)
-->
<project name="SW_KBirthday" default="dist" basedir=".">
	<description>Ant Build File for SW_KBirthday Module</description>
	<condition property="project_dir" value="..">
		<not>
			<isset property="project_dir" />
		</not>
	</condition>
	<condition property="package_dir" value="../../packages">
		<not>
			<isset property="package_dir" />
		</not>
	</condition>
	<condition property="tmp_dir" value="tmp">
		<not>
			<isset property="tmp_dir" />
		</not>
	</condition>
	<property file="build.config.ini" />
	<property name="sw_kbirthday.directory" value="${project_dir}" />
	<property name="sw_kbirthday.directory.list" value="" />

	<target name="dist" depends="mkdir,archive,copy,init,package,tar,zip,gzip,bz2,info,cleanup" />

	<target name="mkdir">
		<mkdir dir="${tmp_dir}" />
		<mkdir dir="${package_dir}" />
		<mkdir dir="${package_dir}/archive" />
	</target>

	<target name="archive">
		<move todir="${package_dir}/archive" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${package_dir}">
				<exclude name="archive/" />
			</fileset>
		</move>
	</target>

	<target name="copy" depends="mkdir">	
		<copy todir="${tmp_dir}">
			<fileset dir="${sw_kbirthday.directory}">
				<exclude name="build/" />
			</fileset>
		</copy>
	</target>

	<target name="init" depends="copy">
		<xmlproperty file="${sw_kbirthday.directory}/mod_sw_kbirthday.xml" collapseAttributes="true" prefix="xml" keepRoot="false" />
		<buildnumber />
		<tstamp>
			<format property="str.datefmt" pattern="${cfg.datefmt}" locale="${cfg.dateloc}" />
		</tstamp>

		<condition property="str.build" value="_${cfg.buildprefix}${build.number}" else="">
			<istrue value="${cfg.addbuild}" />
		</condition>
		<condition property="str.version" value="_${cfg.versionprefix}${xml.version}" else="">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.date" value="_${str.datefmt}" else="">
			<istrue value="${cfg.adddate}" />
		</condition>
		<property name="str.destfile" value="${package_dir}/${cfg.prefix}${cfg.name}${str.version}${str.build}${str.date}" />

		<condition property="do.tar">
			<istrue value="${cfg.tar}" />
		</condition>
		<condition property="do.zip">
			<istrue value="${cfg.zip}" />
		</condition>
		<condition property="do.gzip">
			<istrue value="${cfg.gzip}" />
		</condition>
		<condition property="do.bz2">
			<istrue value="${cfg.bz2}" />
		</condition>
	</target>

	<target name="package" depends="init">
		<!-- Copy files that conatin version tags again and perform token replacement -->
		<condition property="version.date" value="${str.datefmt}" else="">
			<istrue value="${cfg.adddate}" />
		</condition>
		<filter token="swversion" value="${xml.version}" />
		<filter token="swversiondate" value="${version.date}" />
		<filter token="swversionbuild" value="${build.number}" />
		<filter token="swversionname" value="${xml.versionname}" />
		<copy file="${sw_kbirthday.directory}/mod_sw_kbirthday.xml" todir="${tmp_dir}" overwrite="true" filtering="true" />
		<!-- copy file="${project_dir}/README.txt" todir="${tmp_dir}" overwrite="true" filtering="true" /-->
		<copy todir="${tmp_dir}/languages" overwrite="true" filtering="true" >
			<fileset dir="${project_dir}/languages" />
		</copy>
	</target>

	<target name="tar" depends="package" if="do.tar">
		<tar destfile="${str.destfile}.tar" basedir="${tmp_dir}" />
	</target>

	<target name="zip" depends="package" if="do.zip">
		<zip destfile="${str.destfile}.zip" basedir="${tmp_dir}" />
	</target>

	<target name="gzip" depends="package" if="do.gzip">
		<tar destfile="${str.destfile}.tar.gz" basedir="${tmp_dir}" compression="gzip" />
	</target>

	<target name="bz2" depends="package" if="do.bz2">
		<tar destfile="${str.destfile}.tar.bz2" basedir="${tmp_dir}" compression="bzip2" />
	</target>

	<target name="info" depends="package">
		<echo message="Ant Version:     ${ant.version}" />
		<echo message="Project:         ${cfg.name}" />
		<echo message="XML Name:        ${xml.name}" />
		<echo message="XML Version:     ${xml.version}" />
		<echo message="XML Author:      ${xml.author}" />
		<echo message="XML Copyright:   ${xml.copyright}" />
		<echo message="XML License:     ${xml.license}" />
		<echo message="XML Description: ${xml.description}" />
		<echo message="Build:           ${build.number}" />
		<echo message="Date:            ${TODAY}" />
	</target>

	<target name="cleanup" depends="info">
		<delete dir="${tmp_dir}" />
	</target>
</project>
